{
	"nodes":[
		{"id":"740a0de5a35421eb","type":"group","x":-60,"y":-260,"width":2240,"height":2334,"color":"1","label":"AI Logic"},
		{"id":"903b1501db6f1135","type":"group","x":960,"y":-240,"width":1200,"height":694,"label":"Turret"},
		{"id":"aaef77d5b196585b","type":"group","x":960,"y":1360,"width":1200,"height":694,"label":"Tank"},
		{"id":"e1cfe58d07ca4559","type":"group","x":960,"y":557,"width":1200,"height":694,"label":"Grunt"},
		{"id":"0278125ecd3ec80a","type":"text","text":"# Turret","x":980,"y":-220,"width":250,"height":60},
		{"id":"637a447cd9372cf2","type":"text","text":"# Grunt","x":980,"y":580,"width":250,"height":60},
		{"id":"24c2da6501fdc7fd","type":"text","text":"States\n- Idle\n\t- Faces random Directions\n- Pursuing\n\t- When player comes within FOV\n\t- Move at max speed towards player\n- Strafing\n\t- When player is within view and range\n\t- randomly strafe around player and shoot","x":980,"y":640,"width":360,"height":594},
		{"id":"1ca864b089f0d03e","type":"text","text":"# Tank","x":980,"y":1380,"width":250,"height":60},
		{"id":"59567bcb29ad403b","type":"text","text":"# Grunt Controller\n\n**Variables:**\n- `moveSpeed` (max speed)\n- `strafeSpeed`\n- `strafeDirection`\n- `nextStrafeTime`\n- `strafeDuration[]` (min, max)\n- `NavMeshAgent agent`\n\n**Methods:**\n- `MoveTowardsLastKnownPosition()\n- `Brake()`\n- `ChooseNewStrafeDirection()`\n- `nextStrafeTime()`\n\t- `Time.time` + Random(`strafeDuration[0]`, `strafeDuration[1]`)\n\n- `Idle.Execute()`\n\t- `IdleAnim()`\n    - if `IsPlayerInView()`\n        - Change to Pursuing State\n\n- `Pursuing.Execute()`\n    - if `IsPlayerInView()`\n\t\t- `StartShooting()`\n\t\t- `MoveTowardsPlayer()`\n\t\t- if `isPlayerInRange()`\n\t\t\t- Change to Strafing State\n    - else\n        - `MoveTowardsPlayer()` (Last Known Location)\n        - if self is at location Player Last Known Position\n\t        - Change to Idle State\n\n- `Pursuing.Exit()`\n    - `Brake()`\n\n- `Strafing.Enter()`\n    - `ChooseNewStrafeDirection()`\n\t- `nextStrafeTime()`\n    - `StartShooting()`\n\n- `Strafing.Execute()`\n    - if not `IsPlayerInView()` AND not `IsPlayerInRange()`\n        - Change to Pursuing State\n    - else\n        - if `Time.time` > `nextStrafeTime`\n            - `ChooseNewStrafeDirection()`\n            - `nextStrafeTime()`\n        - `TurnToPlayer()`\n\n- `Strafing.Exit()`\n    - `StopShooting()`","x":1340,"y":640,"width":800,"height":594},
		{"id":"90e59205ca4f7ea0","type":"text","text":"States\n- Idle\n\t- Faces random Directions\n\t- Pick a random location within range and move towards it.\n\t\t- When location is reached, repeat\n- Shooting\n\t- When player is within view\n\t- Stops moving and shoots at player\n- Distancing\n\t- When player is within range\n\t- Move away from player while still maintaining line of sight\n\t- keep shooting while moving\n- Searching\n\t- When player is not in view\n\t- Move towards player's last known position\n\t- Go back to idle","x":980,"y":1440,"width":360,"height":594},
		{"id":"d3e13ef38a12eaaa","type":"text","text":"# Tank Controller\n\n`Variables:`\n- `moveSpeed`\n- `currentPatrolTarget`\n\n`Methods:`\n- `SetAgentDestination(Vector3 targetPosition)`\n- `StopMovement()`\n- `PickNewPatrolPoint()`\n- `CalculateRetreatPoint()`\n\n- `Idle.Enter()`\n    - `PickNewPatrolPoint()` using `range` as radius.\n    - `SetAgentDestination(currentPatrolTarget)`.\n    - Set agent speed to `moveSpeed`.\n\n- `Idle.Execute()`\n    - If `IsPlayerInView()`\n\t    - `ChangeState(DistancingState)`\n\t- Else if `ReachedPatrolPoint()`\n\t    - `PickNewPatrolPoint()`\n\t    - `SetAgentDestination(currentPatrolTarget)`\n\t- Else\n\t    - Face movement direction.\n\n- `Distancing.Enter()`\n\t- `StartShooting()`.\n\t- Set agent speed to `moveSpeed`.\n\t\n- `Distancing.Execute()`\n\t- If not `IsPlayerInView()`\n\t\t- `ChangeState(SearchingState)`\n\t- Else  (Player is in view)\n\t\t- `TurnToTarget(playerTarget.position)`\n\t\t- `currentDistance = Vector3.Distance(self, player)`\n\t\t- If `currentDistance < range`\n\t\t\t- `targetRetreatPoint = CalculateRetreatPoint()` aiming for `range` distance.\n\t\t\t- `SetAgentDestination(targetRetreatPoint)`\n\t\t- Else\n\t\t\t- `StopMovement()`\n\t\t- (Shooting continues)\n- `Distancing.Exit:`\n\t- `StopMovement()`\n\t- `StopShooting()`\n\n- `Searching.Enter:`\n\t- `StopShooting()`\n\t- Set agent speed to `moveSpeed`\n\t- `SetAgentDestination(playerLastKnownPosition)`\n\n-  `Searching.Execute:`\n\t- If `IsPlayerInView()`\n\t\t- `ChangeState(DistancingState)`\n\t- Else if `ReachedLKP()`\n\t\t- `ChangeState(IdleState)`\n\t- Else\n\t\t- Face movement direction\n\t\n-  `Searching.Exit:`\n\t- `StopMovement()`","x":1340,"y":1440,"width":800,"height":594},
		{"id":"923963ba3fabb530","type":"text","text":"States\n- Idle\n\t- Turret faces random directions\n- Attacking\n\t- When player comes into turret's view in range\n\t- for 5 seconds after last engagement with player\n\t- When player shoots at turret\n\t- Aims at player's last known location and fires\n- Mechanics\n\t- Slow shooting with explosion","x":980,"y":-160,"width":360,"height":594},
		{"id":"0081d6f662133647","type":"text","text":"# TurretController\n\n**Variables:**\n- `engagementTimeout`\n- `engagementTime`\n\n**Methods:**\n- `Idle.execute()`\n\t- if `IsPlayerInRange`\n\t\t- if `IsPlayerInView`\n\t\t\t- Change to Active State\n\t- if `TakeDamage`\n\t\t- get Creation Position of last bullet collision, set as PlayerLastKnownPosition\n\t\t- Change to Active State\n\n- `Active.Enter()`\n\t- `StartShooting()`\n- `Active.execute()`\n\t- if `isPlayerInView`\n\t\t- `engagementTime` = 0\n\t\t- `TurnToPlayerLastKnownPosition()`\n\t- else if `engagementTime` < `engagementTimeout`\n\t\t- `engagementTime` += `Time.deltaTime`;\n\t\t- `TurnToPlayerLastKnownPosition()`\n\t- else\n\t\t- Change to Idle State\n- `Active.Exit()`\n\t- `StopShooting()`","x":1340,"y":-160,"width":800,"height":594},
		{"id":"9de2cb07612b5197","type":"text","text":"# Base AI Controller\n\n**Variables:**\n\n- `playerTarget`\n- `health`\n- `visionObstructionLayer`\n- `float Range`\n- `float FOV`\n- `turnSpeed`\n- `GameObject Gun`\n- `fireRate`\n- `IdleLookTime`\n- `PlayerLastKnownPosition`\n\n**Methods:**\n\n- `public bool IsPlayerInRange()`\n- `public bool IsPlayerInView()`\n- `public void TurnToPlayerLastKnownPosition()`\n- `public virtual void StartShooting()`\n- `public virtual void StopShooting()`\n- `public virtual void IdleAnim()`\n- `public virtual void BulletHit(GameObject bullet)`\n- `public void TakeDamage(float amount)`\n- `public virtual void Die()`","x":-40,"y":559,"width":660,"height":690},
		{"id":"46b8d9bac5af916d","type":"text","text":"Wea","x":2718,"y":33,"width":250,"height":60},
		{"id":"4086c0c12c82101c","type":"file","file":"Unity/3D-Final-Project/Need to Add.md","x":-520,"y":-208,"width":400,"height":2265}
	],
	"edges":[
		{"id":"ce02afd29f3fa1bd","fromNode":"9de2cb07612b5197","fromSide":"right","toNode":"903b1501db6f1135","toSide":"left"},
		{"id":"61f6fbd1fa59b880","fromNode":"9de2cb07612b5197","fromSide":"right","toNode":"aaef77d5b196585b","toSide":"left"},
		{"id":"824d908fb25a436d","fromNode":"9de2cb07612b5197","fromSide":"right","toNode":"e1cfe58d07ca4559","toSide":"left"}
	]
}